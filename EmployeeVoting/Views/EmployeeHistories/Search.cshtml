@model EmployeeVoting.Models.EmployeeHistory

@{
    ViewData["Title"] = "Search";
    List<EmployeeHistory> employeeHistories = (List<EmployeeHistory>)ViewData["results"];
    List<Employee> employees = (List<Employee>)ViewData["employees"];

    if(employeeHistories != null){employeeHistories!.RemoveAt(0);}

    var i = 0;
}

<h1>Create</h1>

<h4>EmployeeHistory</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Search">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="employee_id" class="control-label"></label>
                <select asp-for="employee_id" class="form-control">
                    <option selected>
                        Select an Employee to see history
                    </option>
                    @foreach (var employee in employees)
                    {
                        <option value="@employee.employee_id">@employee.employee_name</option>
                    }
                </select>
                <span asp-validation-for="employee_id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@if(employeeHistories != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    EmployeeID
                </th>
                <th>
                    Employee
                </th>
                <th>
                    Previous Department
                </th>
                <th>
                    Previous Role
                </th>
                <th>
                    Position Started On
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in employeeHistories)
            {
                <tr>
                    <td>
                        @item.employee_id
                    </td>
                    <td>
                        @employees.First(e => e.employee_id == item.employee_id).employee_name
                    </td>
                    <td>
                        @item.department_name
                    </td>
                    <td>
                        @item.role_name
                    </td>
                    <td>
                        @item.joined_role_date
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
